@startuml People Management API Endpoints
!theme aws-orange
title ChronicleTree People Management API Endpoints

left to right direction

package "People CRUD Operations" {
  [GET /api/v1/people] as GetPeople
  [POST /api/v1/people] as CreatePerson
  [GET /api/v1/people/:id] as GetPerson
  [PUT /api/v1/people/:id] as UpdatePerson
  [DELETE /api/v1/people/:id] as DeletePerson
}

package "Tree and Relationship Data" {
  [GET /api/v1/people/full_tree] as GetFullTree
  [GET /api/v1/people/:id/tree] as GetPersonTree
  [GET /api/v1/people/:id/relatives] as GetPersonRelatives
  [GET /api/v1/people/:id/relationship_stats] as GetRelationshipStats
}

package "Nested Resources" {
  [GET /api/v1/people/:id/facts] as GetPersonFacts
  [POST /api/v1/people/:id/facts] as CreatePersonFact
  [GET /api/v1/people/:id/timeline_items] as GetPersonTimeline
  [POST /api/v1/people/:id/timeline_items] as CreateTimelineItem
  [GET /api/v1/people/:id/media] as GetPersonMedia
  [POST /api/v1/people/:id/media] as CreatePersonMedia
  [GET /api/v1/people/:id/note] as GetPersonNote
  [POST /api/v1/people/:id/note] as CreatePersonNote
  [PUT /api/v1/people/:id/note] as UpdatePersonNote
}

' Main CRUD flow
GetPeople --> CreatePerson : "Add New Person"
CreatePerson --> GetPerson : "View Created Person"
GetPerson --> UpdatePerson : "Edit Person Details"
GetPerson --> DeletePerson : "Remove Person"

' Tree and relationship flows
GetPerson --> GetPersonTree : "View Family Tree"
GetPerson --> GetPersonRelatives : "View Family Members"
GetPersonRelatives --> GetRelationshipStats : "Calculate Statistics"
GetFullTree --> GetPersonTree : "Focus on Person"

' Nested resource flows
GetPerson --> GetPersonFacts : "View Custom Facts"
GetPersonFacts --> CreatePersonFact : "Add New Fact"
GetPerson --> GetPersonTimeline : "View Life Events"
GetPersonTimeline --> CreateTimelineItem : "Add Event"
GetPerson --> GetPersonMedia : "View Photos/Files"
GetPersonMedia --> CreatePersonMedia : "Upload Media"
GetPerson --> GetPersonNote : "View Personal Notes"
GetPersonNote --> CreatePersonNote : "Add Note"
GetPersonNote --> UpdatePersonNote : "Edit Note"

note top of GetPeople : "Authenticated endpoint\nReturns user's people only\nPaginated response"
note bottom of GetFullTree : "Complete family tree\nAll relationships included\nHierarchical structure"
note right of GetPersonNote : "One note per person\nText-based storage\nPersonal annotations"

@enduml
GetPerson --> GetPersonTimeline : View Life Events
GetPerson --> GetPersonMedia : View Media Gallery

' Circular navigation
GetPersonTree --> GetPerson : Navigate to Person
GetPersonRelationships --> GetPerson : View Related Person

note right of GetPeople : "GET /api/v1/people\n• Returns user's family members\n• Supports pagination\n• Filtering by name/dates\n• Includes basic info only"

note right of CreatePerson : "POST /api/v1/people\n• Creates new family member\n• Validates required fields\n• Sets user ownership\n• Returns created person ID"

note right of GetPerson : "GET /api/v1/people/:id\n• Returns full person details\n• Includes all biographical data\n• Shows relationship counts\n• Media and timeline summaries"

note bottom of UpdatePerson : "PUT /api/v1/people/:id\n• Updates person information\n• Validates date consistency\n• Handles deceased status\n• Triggers relationship validation"

note bottom of GetPersonTree : "GET /api/v1/people/:id/tree\n• Returns tree data for person\n• Optimized relationship queries\n• Hierarchical family structure\n• Multiple generation support"

@enduml
